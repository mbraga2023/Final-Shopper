version: '3.8'

services:
  # Backend service (Node.js)
  backend:
    build:
      context: ./backend  # Path to the backend directory
      dockerfile: Dockerfile  # Path to the Dockerfile inside the backend directory
    volumes:
      - ./backend:/usr/src/app  # Mount backend code into the container
    working_dir: /usr/src/app  # Set the working directory inside the container
    ports:
      - "8080:8080"  # Expose backend on port 8080
    networks:
      - app-network
    depends_on:
      - database  # Ensure backend is started after the database
    environment:
      - DATABASE_URL=postgresql://admin:admin@database:5432/database  
    env_file:
      - .env
    command: bash -c "npm install && npx prisma generate && npx prisma migrate deploy && npm run dev"  # Install dependencies, generate Prisma client, run migrations, and start backend

  # Frontend service (React app)
  frontend:
    build:
      context: ./frontend  # Path to the frontend directory
      dockerfile: Dockerfile  # Path to the Dockerfile inside the frontend directory
    depends_on:
      - backend  # Ensure frontend starts only after backend is ready
    volumes:
      - ./frontend:/usr/src/app  # Mount frontend code into the container
    working_dir: /usr/src/app  # Set the working directory inside the container
    ports:
      - "80:80"  # Expose frontend on port 80
    networks:
      - app-network
    command: bash -c "npm install && npm start"  # Install dependencies and start the frontend app

  # PostgreSQL Database
  database:
    image: postgres:latest  # Use the latest PostgreSQL image
    container_name: shopper-db
    restart: always
    ports:
      - "5432:5432"  # Expose PostgreSQL on port 5432
    environment:
      POSTGRES_USER: admin  # Database user
      POSTGRES_PASSWORD: admin  # Database password
      POSTGRES_DB: database  # Database name
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persistent volume for database data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge  # Use bridge network to connect all containers

volumes:
  pgdata:  # Define the volume for PostgreSQL data (persistent storage)
    driver: local
